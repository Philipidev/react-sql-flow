@tailwind base;
@tailwind components;
@tailwind utilities;
 
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
 
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
 
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
 
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
 
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
 
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
 
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
 
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
 
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
 
    --radius: 0.5rem;
    
    /* Definindo cores no formato do Tailwind v4 */
    --color-border: hsl(var(--border));
    --color-background: hsl(var(--background));
    --color-foreground: hsl(var(--foreground));
    --color-primary: hsl(var(--primary));
    --color-primary-foreground: hsl(var(--primary-foreground));
    --color-secondary: hsl(var(--secondary));
    --color-secondary-foreground: hsl(var(--secondary-foreground));
    --color-muted: hsl(var(--muted));
    --color-muted-foreground: hsl(var(--muted-foreground));
    --color-accent: hsl(var(--accent));
    --color-accent-foreground: hsl(var(--accent-foreground));
    --color-destructive: hsl(var(--destructive));
    --color-destructive-foreground: hsl(var(--destructive-foreground));
    --color-popover: hsl(var(--popover));
    --color-popover-foreground: hsl(var(--popover-foreground));
    --color-card: hsl(var(--card));
    --color-card-foreground: hsl(var(--card-foreground));
    --color-input: hsl(var(--input));
    --color-ring: hsl(var(--ring));
    
    /* Valores RGB para uso com transparências */
    --color-primary-rgb: 17, 24, 39;
    --color-muted-rgb: 226, 232, 240;
  }
 
  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
 
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
 
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
 
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
 
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
 
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
 
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
 
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
 
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    
    /* Atualizar cores para modo escuro no formato v4 */
    --color-border: hsl(var(--border));
    --color-background: hsl(var(--background));
    --color-foreground: hsl(var(--foreground));
    --color-primary: hsl(var(--primary));
    --color-primary-foreground: hsl(var(--primary-foreground));
    --color-secondary: hsl(var(--secondary));
    --color-secondary-foreground: hsl(var(--secondary-foreground));
    --color-muted: hsl(var(--muted));
    --color-muted-foreground: hsl(var(--muted-foreground));
    --color-accent: hsl(var(--accent));
    --color-accent-foreground: hsl(var(--accent-foreground));
    --color-destructive: hsl(var(--destructive));
    --color-destructive-foreground: hsl(var(--destructive-foreground));
    --color-popover: hsl(var(--popover));
    --color-popover-foreground: hsl(var(--popover-foreground));
    --color-card: hsl(var(--card));
    --color-card-foreground: hsl(var(--card-foreground));
    --color-input: hsl(var(--input));
    --color-ring: hsl(var(--ring));
  }
}
 
@layer base {
  * {
    border-color: var(--color-border);
  }
  body {
    background-color: var(--color-background);
    color: var(--color-foreground);
  }
}

/* ReactFlow custom styles */
.react-flow__node {
  border: 1px solid;
  border-color: var(--color-border);
  border-radius: 0.5rem;
  box-shadow: 0 4px 10px -3px rgba(0, 0, 0, 0.15);
  background-color: var(--color-card);
  width: auto !important;
  cursor: pointer;
  transition: all 0.2s ease;
  overflow: hidden;
}

.react-flow__node:hover {
  box-shadow: 0 6px 15px -3px rgba(0, 0, 0, 0.2);
  transform: translateY(-2px);
}

.react-flow__node.dragging {
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.2), 0 4px 6px -4px rgba(0, 0, 0, 0.2);
  z-index: 10;
  border-color: var(--color-primary);
  transform: scale(1.02);
}

.react-flow__handle {
  background-color: var(--color-primary);
  border-color: var(--color-primary-foreground);
  transition: all 0.2s ease;
}

.react-flow__handle:hover {
  background-color: var(--color-primary);
  transform: scale(1.5);
}

.react-flow__edge-path {
  stroke: var(--color-primary);
  stroke-width: 2;
  transition: stroke-width 0.2s ease;
}

.react-flow__edge:hover .react-flow__edge-path {
  stroke-width: 3;
}

.table-node {
  padding: 0;
  min-width: 280px;
  display: flex;
  flex-direction: column;
  max-width: none;
  position: relative;
  transition: width 0.1s ease, height 0.1s ease;
}

.table-node.resizing {
  cursor: nwse-resize !important;
  opacity: 0.9;
  box-shadow: 0 8px 15px -3px rgba(0, 0, 0, 0.25), 0 4px 6px -4px rgba(0, 0, 0, 0.25);
  z-index: 1000 !important;
  pointer-events: all !important;
}

.table-node.resizing .resize-handle {
  background-color: var(--color-primary);
  opacity: 1;
}

.react-flow__node.resizing {
  cursor: nwse-resize !important;
  z-index: 1000;
  pointer-events: all !important;
}

.react-flow__node.resizing * {
  pointer-events: none;
}

.react-flow__node.resizing .resize-handle {
  pointer-events: all !important;
}

.table-node__header {
  font-weight: 700;
  font-size: 1.125rem;
  padding: 0.75rem 1rem;
  user-select: none;
  text-align: center;
  border-bottom: 2px solid var(--color-border);
  background-color: var(--color-primary);
  color: var(--color-primary-foreground);
  cursor: grab;
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

.table-node__header:active {
  cursor: grabbing;
  background-color: hsl(var(--primary) / 0.9);
}

.table-node__header .table-name {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  display: block;
  font-weight: 700;
  letter-spacing: 0.01em;
}

.table-node__content {
  font-size: 0.875rem;
  padding: 0.5rem;
  overflow-y: auto;
  max-height: none;
  min-height: 100px;
  flex: 1;
  scrollbar-width: thin;
}

.table-node__content::-webkit-scrollbar {
  width: 6px;
}

.table-node__content::-webkit-scrollbar-track {
  background: transparent;
}

.table-node__content::-webkit-scrollbar-thumb {
  background-color: var(--color-muted);
  border-radius: 3px;
}

.table-node__field {
  padding: 0.4rem 0.5rem;
  position: relative;
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  display: flex;
  align-items: center;
  border-radius: 0.25rem;
  transition: background-color 0.15s ease;
}

.table-node__field:hover {
  background-color: rgba(0, 0, 0, 0.03);
}

.table-node__field:last-child {
  border-bottom: none;
}

.table-node__field-pk {
  background-color: rgba(var(--color-primary-rgb, 59, 130, 246), 0.08);
  font-weight: 600;
}

.table-node__field-pk:hover {
  background-color: rgba(var(--color-primary-rgb, 59, 130, 246), 0.12);
}

.table-node__field-fk {
  font-style: italic;
  background-color: rgba(var(--color-muted-rgb, 156, 163, 175), 0.08);
}

.table-node__field-fk:hover {
  background-color: rgba(var(--color-muted-rgb, 156, 163, 175), 0.12);
}

/* Cabeçalho das colunas */
.table-node__column-header {
  display: grid;
  grid-template-columns: 50px 1fr 80px;
  padding: 0.3rem 0.5rem;
  background-color: rgba(0, 0, 0, 0.04);
  border-bottom: 2px solid var(--color-border);
  font-size: 0.7rem;
  font-weight: 700;
  text-transform: uppercase;
  color: var(--color-muted-foreground);
  letter-spacing: 0.05em;
}

/* Conteúdo dos campos */
.table-node__field-content {
  display: grid;
  grid-template-columns: 50px 1fr 80px;
  width: 100%;
  align-items: center;
}

/* Estilos para as colunas */
.column-key {
  display: flex;
  justify-content: center;
  align-items: center;
  padding-right: 0.25rem;
}

.column-name {
  padding: 0 0.5rem;
  font-weight: 500;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.column-type {
  font-size: 0.75rem;
  color: var(--color-muted-foreground);
  text-align: right;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-left: 0.25rem;
}

/* Badges para PK e FK */
.badge {
  display: inline-block;
  font-size: 0.65rem;
  font-weight: 700;
  padding: 0.15rem 0.3rem;
  border-radius: 0.25rem;
  text-align: center;
  min-width: 26px;
}

.badge-pk {
  background-color: rgba(var(--color-primary-rgb), 0.15);
  color: var(--color-primary);
}

.badge-fk {
  background-color: rgba(var(--color-muted-rgb), 0.2);
  color: var(--color-muted-foreground);
}

/* Estilo para nome do campo */
.field-name {
  font-weight: 500;
}

/* Marcador de campo obrigatório */
.required-marker {
  color: var(--color-destructive);
  font-weight: bold;
  margin-left: 0.25rem;
}

/* Referência FK */
.fk-reference {
  font-size: 0.65rem;
  font-style: italic;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: var(--color-muted-foreground);
}

/* Estilo para desativar arrasto quando estiver redimensionando */
body.resizing-mode {
  cursor: nwse-resize !important;
}

body.resizing-mode .react-flow__node {
  pointer-events: none !important;
}

body.resizing-mode .react-flow__pane {
  cursor: nwse-resize !important;
  pointer-events: none !important;
}

body.resizing-mode .react-flow__node.dragging {
  pointer-events: none !important;
}

body.resizing-mode * {
  user-select: none !important;
}

body.resizing-mode .table-node.resizing {
  pointer-events: all !important;
  z-index: 1000 !important;
  opacity: 0.9;
  box-shadow: 0 8px 15px -3px rgba(0, 0, 0, 0.25), 0 4px 6px -4px rgba(0, 0, 0, 0.25);
}

body.resizing-mode .resize-handle {
  pointer-events: all !important;
  background-color: var(--color-primary) !important;
  opacity: 1 !important;
}

.resize-handle {
  position: absolute;
  bottom: 2px;
  right: 2px;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: nwse-resize;
  border-radius: 3px;
  opacity: 0.5;
  transition: opacity 0.2s;
  z-index: 10;
  color: var(--color-muted-foreground);
  background-color: transparent;
}

.resize-handle:hover {
  opacity: 1;
  color: var(--color-primary);
}

.resize-handle:active {
  opacity: 1;
  color: var(--color-primary);
}

.resize-handle svg {
  width: 14px;
  height: 14px;
  transform: rotate(-45deg);
  pointer-events: none;
} 